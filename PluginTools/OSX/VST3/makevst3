
print_usage () {
  echo "Usage: makevst -n <name> -l <path> -r <resources_dir> -d <destination>"
}

# https://stackoverflow.com/questions/7069682/how-to-get-arguments-with-flags-in-bash
while getopts 'n:l:r:d:' flag; do
  case "${flag}" in
    n) PLUGIN_NAME="${OPTARG}" ;;
    l) BINARY="${OPTARG}" ;;
    r) RESOURCES="${OPTARG}" ;;
    d) DESTINATION="${OPTARG}" ;;
    *) print_usage
       exit 1 ;;
  esac
done

[[ -z "$PLUGIN_NAME" ]] && { echo "Plugin name missing!" ; exit 1; }
[[ -z "$BINARY" ]] && { echo "VST binary missing!" ; exit 1; }
[[ -z "$RESOURCES" ]] && { echo "VST binary missing!" ; exit 1; }
[[ -z "$DESTINATION" ]] && { echo "Destination location missing!" ; exit 1; }

# System folders.
VST_FOLDER="$DESTINATION"
VST_PACKAGE="$VST_FOLDER"/"$PLUGIN_NAME".vst3
VST_CONTENTS_FOLDER="$VST_PACKAGE"/Contents
VST_MACOS_FOLDER="$VST_CONTENTS_FOLDER"/MacOS
VST_RESOURCES_FOLDER="$VST_CONTENTS_FOLDER"/Resources

# Set up the directory structure.
rm -rf "$VST_PACKAGE"
mkdir -p "$VST_PACKAGE" "$VST_CONTENTS_FOLDER" "$VST_MACOS_FOLDER" "$VST_RESOURCES_FOLDER"

# We are emulating this XCode-only action.
# INPUT_FOLDER="$NEPTUNE/ThirdParty/Juce/JUCE/examples/audio\ plugin\ demo/Builds/MacOSX"
# builtin-infoPlistUtility \
#   "$INPUT_FOLDER"/Info-VST.plist \
#   -genpkginfo "$VST_CONTENTS_FOLDER"/PkgInfo \
#   -expandbuildsettings \
#   -platform macosx \
#   -o "$VST_CONTENTS_FOLDER"/Info.plist
cp $RESOURCES/VST-Info.plist "$VST_CONTENTS_FOLDER"/Info.plist

# TODO: Do this with a genrule.
VST_RESOURCES_FOLDER=PluginTools/OSX
cp "$VST_RESOURCES_FOLDER"/VST/PkgInfo "$VST_CONTENTS_FOLDER"/PkgInfo

/Applications/Xcode.app/Contents/Developer/usr/bin/ibtool \
  --strip "$VST_RESOURCES_FOLDER"/RecentFilesMenuTemplate.nib \
  --output-format human-readable-text "$VST_RESOURCES_FOLDER"/RecentFilesMenuTemplate.nib

# Here we could combine binaries that were built for multiple architectures.
# "$BINARY"/x86_64/"$PLUGIN_NAME" "$BINARY"/i386/"$PLUGIN_NAME" \
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo \
  -create "$BINARY" \
  -output "$VST_MACOS_FOLDER"/"$PLUGIN_NAME"
